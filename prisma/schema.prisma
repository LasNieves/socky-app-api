// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String     @id @default(uuid())

  email String @unique
  password String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")

  profile Profile?
  posts Post[]
  workspaces UsersOnWorkspaces[]

  @@map("users")  
}

model Profile {
  id    String     @id @default(uuid())

  firstName String @map("first_name")
  lastName String @map("last_name")
  avatar String 

  user User @relation(fields: [userId], references: [id])
  userId String @unique @map("user_id")

  @@map("profiles")  
}

model Post {
  id    String     @id @default(uuid())

  title String
  description String
  createdAt DateTime @default(now()) @map("created_at")

  category Category @relation(fields: [categoryId], references: [id])
  categoryId Int @map("category_id")
 
  user User @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String @map("workspace_id")

  @@map("posts")  
}

model Category {
  id    Int     @id @default(autoincrement())

  title String
  createdAt DateTime @default(now()) @map("created_at")
 
  posts Post[]

  @@map("categories")  
}

model Workspace {
  id    String     @id @default(uuid())

  name String  
  icon String
  personal Boolean @default(true)

  users UsersOnWorkspaces[]
  posts Post[]

  @@map("workspaces")  
}

model UsersOnWorkspaces {
  user User @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  workspace Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String @map("workspace_id")

  role Role 

  @@id([userId, workspaceId])
  @@map("users_workspaces")
}

enum Role {
  ADMIN
}

